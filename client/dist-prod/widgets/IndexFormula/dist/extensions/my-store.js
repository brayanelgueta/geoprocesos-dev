System.register([],(function(e,r){return{execute:function(){var r,t;e((t={},(r={d:(e,t)=>{for(var E in t)r.o(t,E)&&!r.o(e,E)&&Object.defineProperty(e,E,{enumerable:!0,get:t[E]})},o:(e,r)=>Object.prototype.hasOwnProperty.call(e,r),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},p:""}).p=window.jimuConfig.baseUrl,(()=>{"use strict";var e;r.r(t),r.d(t,{MyActionKeys:()=>e,default:()=>E}),function(e){e.LOADING="LOADING",e.SET_ERROR="SET_ERROR",e.SET_ALL_SENSORS="SET_ALL_SENSORS",e.SET_SENSOR="SET_SENSOR",e.SET_SEARCH_DATE="SET_SEARCH_DATE",e.ADD_IMAGERY="ADD_IMAGERY",e.SET_SELECTED_SENSORS="SET_SELECTED_SENSORS",e.SELECT_IMAGERY="SELECT_IMAGERY",e.REMOVE_IMAGERY="REMOVE_IMAGERY",e.CHANGE_DETECTION_READY="CHANGE_DETECTION_READY",e.BAND_FORMULA="BAND_FORMULA",e.INDEX_FORMULA="INDEX_FORMULA",e.GEOPROCESS="GEOPROCESS",e.ONLINE_PROCESSOR="ONLINE_PROCESSOR"}(e||(e={}));class E{constructor(){this.id="my-local-redux-store-extension"}getActions(){return Object.keys(e).map((r=>e[r]))}getInitLocalState(){return{loading:!0,error:null,availableSensors:[],selectedSensor:null,searchDate:null,filteredImages:[],selectedSensors:[null,null],selectedImages:[null,null],isReady:!0,bandFormula:!1,indexFormula:!1,geoprocess:null,onlineProcessor:null}}getReducer(){return(r,t,E)=>{switch(t.type){case e.LOADING:return r.set("loading",t.val);case e.SET_ERROR:return r.set("error",t.val);case e.SET_ALL_SENSORS:return r.set("availableSensors",t.val);case e.SET_SENSOR:return r.set("selectedSensor",t.val);case e.SET_SEARCH_DATE:return r.set("searchDate",t.val);case e.ADD_IMAGERY:return r.set("filteredImages",t.val);case e.BAND_FORMULA:return r.set("bandFormula",t.val);case e.INDEX_FORMULA:return r.set("indexFormula",t.val);case e.SET_SELECTED_SENSORS:return r.set("selectedSensors",t.val);case e.SELECT_IMAGERY:return r.set("selectedImages",t.val);case e.REMOVE_IMAGERY:return r.set("selectedImages",[]);case e.CHANGE_DETECTION_READY:return r.set("isReady",t.val);case e.GEOPROCESS:return r.set("geoprocess",t.val);case e.ONLINE_PROCESSOR:return r.set("onlineProcessor",t.val);default:return r}}}getStoreKey(){return"myState"}}})(),t))}}}));