System.register([],(function(e,t){return{execute:function(){var t,r;e((r={},(t={d:(e,r)=>{for(var E in r)t.o(r,E)&&!t.o(e,E)&&Object.defineProperty(e,E,{enumerable:!0,get:r[E]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},p:""}).p=window.jimuConfig.baseUrl,(()=>{"use strict";var e;t.r(r),t.d(r,{MyActionKeys:()=>e,default:()=>E}),function(e){e.LOADING="LOADING",e.ADD_IMAGERY="ADD_IMAGERY",e.REMOVE_IMAGERY="REMOVE_IMAGERY",e.UPDATE_IMAGERY="UPDATE_IMAGERY",e.SELECT_IMAGERY="SELECT_IMAGERY",e.LIST_IMAGENARIES="LIST_IMAGENARIES",e.ADD_SCENE="ADD_SCENE",e.REMOVE_SCENE="REMOVE_SCENE",e.SELECT_SCENE="SELECT_SCENE"}(e||(e={}));class E{constructor(){this.id="my-local-redux-store-extension"}getActions(){return Object.keys(e).map((t=>e[t]))}getInitLocalState(){return{loading:!1,imageries:[],scenes:[],selectedImageries:[],selectedSceneId:null}}getReducer(){return(t,r,E)=>{switch(r.type){case e.LOADING:return t.set("loading",r.val);case e.ADD_IMAGERY:return t.set("imageries",r.val);case e.SELECT_IMAGERY:return t.set("selectedImageries",r.val);case e.REMOVE_IMAGERY:return t.set("selectedImageries",[]);default:return t}}}getStoreKey(){return"myState"}}})(),r))}}}));